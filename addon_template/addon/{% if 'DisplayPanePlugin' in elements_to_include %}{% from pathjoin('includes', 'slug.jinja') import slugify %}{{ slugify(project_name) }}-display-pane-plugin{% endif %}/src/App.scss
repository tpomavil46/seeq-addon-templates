@import '~bootstrap';

html {
  width: 100%;
  height: 100%;
  margin: 0;
  display: flex;
}

body, .App, div#root, .chartContainer {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  overflow: hidden;
}

.chartWarningContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex: 1 1 auto;
  align-items: center;
  overflow: hidden;
}

.chartWarningMessage {
  font-size: 15px;
  padding: 25px;
  width: 400px;
  border: 1px solid #007960;
  background-color: #F6F6F6;
  color: #3a3a3a;
  border-radius: 4px;
}

.seeq-toolbar {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex-grow: 0;
  align-items: center;
  padding: 5px 10px 5px 65px;
  background-color: #f5f5f5;
  border: 1px solid #e3e3e3;
  min-height: 50px;

  .btn-toolbar {
    opacity: 1;

    &:focus {
      box-shadow: none;
    }

    &.btn.disabled, &.btn[disabled] {
      opacity: 0.45;
    }

    &:hover {
      border-color: #124734;
      color: #3a3a3a;
    }

    &.active {
      outline: 0;
      background-image: none;
      box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    }

    small {
      display: block;
      font-size: 10px;
      line-height: 10px;
      max-width: 50px;
      white-space: normal;
      margin-top: 3px;
    }
  }
}

.hideStateIndication.dropdown-item {
  &:active, &:hover, &:focus {
    color: inherit;
    text-decoration: inherit;
    background-color: inherit;
    cursor: default;
  }
}

.itemSelection {
  .itemSelectionLabel {
    cursor: pointer;
  }

  .itemSelectionInput {
    transform: translateY(-2px);
    margin-right: 5px;
    cursor: pointer;
  }

  .itemSelectionAsset {
    font-size: xx-small;
    margin-left: 20px;
    transform: translateY(-10px);
    color: #777777;
  }
}

.dropdownButton {
  .dropdown-toggle:after {
    display: none;
  }
}

.noConditions {
  margin-left: 10px;
  font-style: italic;
  font-size: small;
  color: #555555;
}

.containerChildren {
  margin-left: 20px;
}

// From Seeq


.flexRowContainer {
  display: flex;
  flex-direction: column;
}

.flexColumnContainer {
  display: flex;
  flex-direction: row;
}

.flexFill {
  flex: 1 1 auto;
  // If a flex container contains a non-flex element (such as a fixed-size chart) that is bigger than the available
  // space it will overflow its boundaries.  By clipping the content we get an accurate size of the flex element which
  // allows the chart to then be resized to a size that fits.
  overflow: hidden;
}

.flexCenter {
  justify-content: center;
  align-items: center;
}

.disabledBehavior {
  pointer-events: none;
  cursor: inherit;
}

